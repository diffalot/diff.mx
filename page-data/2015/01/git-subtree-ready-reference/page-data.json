{"componentChunkName":"component---src-components-post-jsx","path":"/2015/01/git-subtree-ready-reference/","result":{"data":{"mdx":{"id":"2b2559b0-f1bb-5912-b502-6b98a39a1207","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Git Subtree Ready Reference\",\n  \"date\": \"2015-01-22T12:00:00.000Z\",\n  \"categories\": [\"development\"],\n  \"tags\": [\"git\", \"development\", \"git subtree\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Git Subtrees allow easily tracking and contributing to remote repositories. The advantage over submodules is that the tracked subdirectory is contained within the current repository repository history so no initialization and update cycle is required when cloning the project. Additionally, the history of the subtree may be fully tracked or squashed.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"these notes use the following articles as reference:\"), mdx(\"ul\", {\n    parentName: \"blockquote\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://blogs.atlassian.com/2013/05/alternatives-to-git-submodule-git-subtree/\",\n    \"rel\": \"external\"\n  }), \"Alternatives To Git Submodule: Git Subtree\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.codeproject.com/Articles/562949/ManagingplusNestedplusLibrariesplusUsingplustheplu\",\n    \"rel\": \"external\"\n  }), \"Managing Nested Libraries Using the GIT Subtree Merge Workflow\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://git-scm.com/book/en/v1/Git-Tools-Subtree-Merging\",\n    \"rel\": \"external\"\n  }), \"6.7 Git Tools - Subtree Merging\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://airbladesoftware.com/notes/moving-a-subdirectory-into-a-separate-git-repository/\",\n    \"rel\": \"external\"\n  }), \"Moving A Subdirectory Into A Separate Git Repository\")))), mdx(\"h1\", {\n    \"id\": \"track-a-remote-repository-squash-commits\",\n    \"style\": {\n      \"position\": \"relative\"\n    },\n    \"className\": \"font-sans font-black\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#track-a-remote-repository-squash-commits\",\n    \"aria-label\": \"track a remote repository squash commits permalink\",\n    \"className\": \"header-anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"track a remote repository, squash commits\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"add subtree as a remote\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"git remote add -f $REMOTE_NAME $REMOTE_URI\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"setup remote as a subtree with a relative local path. this will fetch and merge.\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"git subtree add --prefix $LOCAL_PATH $REMOTE_NAME $REMOTE_BRANCH --squash\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"fetch and merge (pull) when the subtree remote has updates\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"gitfetch $remote_name $remote_branch\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-gitfetch $remote_name $remote_branch\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-gitfetch $remote_name $remote_branch\"\n  }), \"git subtree pull --prefix $LOCAL_PATH $REMOTE_NAME $REMOTE_BRANCH\"))))), mdx(\"h1\", {\n    \"id\": \"track-a-subdirectory-of-a-remote-repository-keep-full-history\",\n    \"style\": {\n      \"position\": \"relative\"\n    },\n    \"className\": \"font-sans font-black\"\n  }, mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#track-a-subdirectory-of-a-remote-repository-keep-full-history\",\n    \"aria-label\": \"track a subdirectory of a remote repository keep full history permalink\",\n    \"className\": \"header-anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"track a subdirectory of a remote repository, keep full history\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"clone remote repository as a new project\"), mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"git clone $REMOTE_URI\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"discard everything but the subdirectory wanted, this will make the wanted directory the project root with full working history.\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"cd$cloned_repo\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-cd$cloned_repo\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-cd$cloned_repo\"\n  }), \"git checkout -b $WORK_BRANCH\\ngit filter-branch --subdirectory-filter $WANTED_DIRECTORY HEAD -- --all\\ngit reset --hard\\ngit gc --aggressive\\ngit prune\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"setup new remote to contain project, and push to master branch at that location\"), mdx(\"div\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"gitremote add $new_remote_name $new_remote_uri\"\n  }), mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-gitremote add $new_remote_name $new_remote_uri\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-gitremote add $new_remote_name $new_remote_uri\"\n  }), \"git push --set-upstream $NEW_REMOTE_NAME $WORK_BRANCH:master\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"use that new repository as a subtree in either project to commit changes to both repositories. if you\\u2019d like the full history in your project, leave off the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"--squash\"), \" during submodule commands.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Git Subtree Ready Reference"},"parent":{"__typename":"File","id":"ae36e6cb-22a8-532f-9431-0afd0e87e646","relativePath":"2015-01-22-git-subtree.md"}}},"pageContext":{"id":"2b2559b0-f1bb-5912-b502-6b98a39a1207"}},"staticQueryHashes":["267843117","3128451518","3128451518"]}